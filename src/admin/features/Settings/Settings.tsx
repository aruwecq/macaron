import React, { useState } from 'react';
import { Save, Upload, Palette, Mail, Phone, MapPin } from 'lucide-react';
import Button from '../../shared/components/Button/Button';
import Input from '../../shared/components/Card/Input/Input';
import Card from '../../shared/components/Card/Card';
import './Settings.scss';

const Settings: React.FC = () => {
  const [settings, setSettings] = useState({
    logo: 'https://images.pexels.com/photos/6231884/pexels-photo-6231884.jpeg?auto=compress&cs=tinysrgb&w=100',
    brandName: 'Sweet Macarons',
    email: 'info@sweetmacarons.ru',
    phone: '+7 (999) 123-45-67',
    address: '–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, –¥. 15',
    primaryColor: '#FFB6C1',
    secondaryColor: '#98FB98',
    accentColor: '#F5F5DC'
  });

  const updateSetting = (key: string, value: string) => {
    setSettings(prev => ({ ...prev, [key]: value }));
  };

  const handleSave = () => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', settings);
    alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');
  };

  const handleLogoUpload = () => {
    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ–≥–æ—Ç–∏–ø–∞
    updateSetting('logo', 'https://images.pexels.com/photos/6231884/pexels-photo-6231884.jpeg?auto=compress&cs=tinysrgb&w=100');
  };

  return (
    <div className="settings fade-in">
      <div className="settings-header">
        <h2>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
        <p>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –∏ –±—Ä–µ–Ω–¥–∏–Ω–≥–∞</p>
      </div>

      <div className="settings-grid">
        {/* –ë—Ä–µ–Ω–¥–∏–Ω–≥ */}
        <Card className="branding-section">
          <h3>üé® –ë—Ä–µ–Ω–¥–∏–Ω–≥</h3>
          
          <div className="logo-section">
            <label>–õ–æ–≥–æ—Ç–∏–ø</label>
            <div className="logo-upload">
              <div className="logo-preview">
                <img src={settings.logo} alt="–õ–æ–≥–æ—Ç–∏–ø" />
              </div>
              <Button 
                variant="secondary" 
                size="sm"
                onClick={handleLogoUpload}
              >
                <Upload size={16} />
                –ó–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ–≥–æ—Ç–∏–ø
              </Button>
            </div>
          </div>

          <Input
            label="–ù–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞"
            value={settings.brandName}
            onChange={(value) => updateSetting('brandName', value)}
          />

          <div className="color-section">
            <h4>–¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞</h4>
            <div className="color-inputs">
              <div className="color-input">
                <label>–û—Å–Ω–æ–≤–Ω–æ–π —Ü–≤–µ—Ç</label>
                <div className="color-picker">
                  <input
                    type="color"
                    value={settings.primaryColor}
                    onChange={(e) => updateSetting('primaryColor', e.target.value)}
                  />
                  <span>{settings.primaryColor}</span>
                </div>
              </div>
              
              <div className="color-input">
                <label>–í—Ç–æ—Ä–∏—á–Ω—ã–π —Ü–≤–µ—Ç</label>
                <div className="color-picker">
                  <input
                    type="color"
                    value={settings.secondaryColor}
                    onChange={(e) => updateSetting('secondaryColor', e.target.value)}
                  />
                  <span>{settings.secondaryColor}</span>
                </div>
              </div>
              
              <div className="color-input">
                <label>–ê–∫—Ü–µ–Ω—Ç–Ω—ã–π —Ü–≤–µ—Ç</label>
                <div className="color-picker">
                  <input
                    type="color"
                    value={settings.accentColor}
                    onChange={(e) => updateSetting('accentColor', e.target.value)}
                  />
                  <span>{settings.accentColor}</span>
                </div>
              </div>
            </div>
          </div>
        </Card>

        {/* –ö–æ–Ω—Ç–∞–∫—Ç—ã */}
        <Card className="contacts-section">
          <h3>üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
          
          <div className="contact-field">
            <Mail className="field-icon" size={20} />
            <Input
              label="Email"
              type="email"
              value={settings.email}
              onChange={(value) => updateSetting('email', value)}
            />
          </div>

          <div className="contact-field">
            <Phone className="field-icon" size={20} />
            <Input
              label="–¢–µ–ª–µ—Ñ–æ–Ω"
              type="tel"
              value={settings.phone}
              onChange={(value) => updateSetting('phone', value)}
            />
          </div>

          <div className="contact-field">
            <MapPin className="field-icon" size={20} />
            <Input
              label="–ê–¥—Ä–µ—Å"
              value={settings.address}
              onChange={(value) => updateSetting('address', value)}
            />
          </div>
        </Card>

        {/* –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä */}
        <Card className="preview-section">
          <h3>üëÄ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä</h3>
          
          <div className="preview-container">
            <div 
              className="preview-header"
              style={{
                background: `linear-gradient(135deg, ${settings.primaryColor} 0%, ${settings.secondaryColor} 100%)`
              }}
            >
              <div className="preview-logo">
                <img src={settings.logo} alt="–õ–æ–≥–æ—Ç–∏–ø" />
                <span>{settings.brandName}</span>
              </div>
            </div>
            
            <div className="preview-content">
              <div className="preview-card" style={{ borderColor: settings.primaryColor }}>
                <h4>–ü—Ä–∏–º–µ—Ä –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–∞</h4>
                <p>–í–∞–Ω–∏–ª—å–Ω—ã–µ –º–∞–∫–∞—Ä–æ–Ω—Å</p>
                <div 
                  className="preview-button"
                  style={{ backgroundColor: settings.primaryColor }}
                >
                  –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                </div>
              </div>
              
              <div className="preview-info">
                <h4>–ö–æ–Ω—Ç–∞–∫—Ç—ã</h4>
                <p>üìß {settings.email}</p>
                <p>üìû {settings.phone}</p>
                <p>üìç {settings.address}</p>
              </div>
            </div>
          </div>
        </Card>

        {/* –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        <Card className="system-section">
          <h3>üîß –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
          
          <div className="system-options">
            <div className="system-option">
              <input type="checkbox" id="notifications" defaultChecked />
              <label htmlFor="notifications">Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–∞—Ö</label>
            </div>
            
            <div className="system-option">
              <input type="checkbox" id="analytics" defaultChecked />
              <label htmlFor="analytics">–°–±–æ—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏</label>
            </div>
            
            <div className="system-option">
              <input type="checkbox" id="backups" defaultChecked />
              <label htmlFor="backups">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ</label>
            </div>
            
            <div className="system-option">
              <input type="checkbox" id="maintenance" />
              <label htmlFor="maintenance">–†–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è</label>
            </div>
          </div>
        </Card>
      </div>

      <div className="settings-actions">
        <Button onClick={handleSave} size="lg">
          <Save size={20} />
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        </Button>
      </div>
    </div>
  );
};

export default Settings;